{"version":3,"sources":["webpack:///./src/pages/post/post.styles.scss?a7b4","webpack:///./src/pages/post/post.styles.scss","webpack:///./src/pages/post/post.page.component.jsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","Post","postId","useParams","post","useContext","BlogPostsContext","find","isBlog","title","className","icon","faExclamationCircle","size","author","date","imageSrcFromImages","paragraphs","dateStr","toDateString","faUser","src","alt","map","paragraph","idx","key"],"mappings":"4EAAA,IAAIA,EAAM,EAAQ,GACFC,EAAU,EAAQ,IAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPN,EAAIC,EAASK,GAI1BF,EAAOG,QAAUN,EAAQO,QAAU,I,oBChBnCD,EADkC,EAAQ,GAChCE,EAA4B,IAE9BC,KAAK,CAACN,EAAOC,EAAI,smBAAumB,KAEhoBD,EAAOG,QAAUA,G,gCCNjB,0EAuDeI,UA9CF,WAAM,IACTC,EAAWC,cAAXD,OAGFE,EAFQC,qBAAWC,oBAENC,MAAK,SAACH,GAAD,OAAUA,EAAKF,SAAWA,KAElD,IAAKE,EACH,OACE,oCACE,kBAAC,IAAD,CAAMI,QAAM,EAACC,MAAM,mBACnB,0BAAMC,UAAU,kBACd,kBAAC,IAAD,CACEA,UAAU,UACVC,KAAMC,IACNC,KAAK,OAEP,gFAhBS,IAsBTJ,EAAwDL,EAAxDK,MAAOK,EAAiDV,EAAjDU,OAAQC,EAAyCX,EAAzCW,KAAMC,EAAmCZ,EAAnCY,mBAAoBC,EAAeb,EAAfa,WAC3CC,EAAUH,EAAKI,eACrB,OACE,oCACE,kBAAC,IAAD,CAAMX,QAAM,IACZ,0BAAME,UAAU,QACd,4BAAKD,GACL,uBAAGC,UAAU,QACX,kBAAC,IAAD,CAAiBA,UAAU,UAAUC,KAAMS,MAC3C,2CACY,gCAASN,GADrB,MACyCI,EAAS,MAGpD,yBAAKG,IAAG,oBAAeL,GAAsBM,IAAI,SAChDL,EAAWM,KAAI,SAACC,EAAWC,GAAZ,OACd,uBAAGf,UAAU,QAAQgB,IAAKD,GACvBD","file":"5.bundle.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./post.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"main.post{padding:50px 30px}main.post h2{font-size:40px;margin-bottom:20px;padding-bottom:10px;border-bottom:#ccc solid 1px}main.post p.meta{margin-bottom:30px}main.post p.meta span{margin-left:5px}main.post p.inner{text-align:center;padding:15px 120px}@media(max-width: 600px){main.post p.inner{padding:30px}}main.post img{width:100%;max-width:300px;min-width:150;border-radius:50%;display:block;margin:0 auto;margin-bottom:30px}main.post-not-found{height:48.8vh;display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;padding:20px}main.post-not-found h1{margin-top:20px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useContext } from 'react';\nimport './post.styles.scss';\nimport Hero from '../../components/hero/hero.component';\nimport { useParams } from 'react-router-dom';\nimport { BlogPostsContext } from '../blog/blog.page.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Post = () => {\n  const { postId } = useParams();\n  const posts = useContext(BlogPostsContext);\n\n  const post = posts.find((post) => post.postId === postId);\n\n  if (!post) {\n    return (\n      <>\n        <Hero isBlog title=\"POST NOT FOUND\" />\n        <main className=\"post-not-found\">\n          <FontAwesomeIcon\n            className=\"fa-icon\"\n            icon={faExclamationCircle}\n            size=\"6x\"\n          />\n          <h1>The post you tried to reach seems not to exist</h1>\n        </main>\n      </>\n    );\n  }\n\n  const { title, author, date, imageSrcFromImages, paragraphs } = post;\n  const dateStr = date.toDateString();\n  return (\n    <>\n      <Hero isBlog />\n      <main className=\"post\">\n        <h2>{title}</h2>\n        <p className=\"meta\">\n          <FontAwesomeIcon className=\"fa-icon\" icon={faUser} />\n          <span>\n            Posted by <strong>{author}</strong> | {dateStr}{' '}\n          </span>\n        </p>\n        <img src={`../images/${imageSrcFromImages}`} alt=\"post\" />\n        {paragraphs.map((paragraph, idx) => (\n          <p className=\"inner\" key={idx}>\n            {paragraph}\n          </p>\n        ))}\n      </main>\n    </>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}